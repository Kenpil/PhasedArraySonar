f = 40000;
c = 340;
lambda = c / f
step = 45;
k = 2 * pi / lambda
a = 0.0049;
be = linspace(-1/2*pi, 1/2*pi, step);
al = linspace(-1/2*pi, 1/2*pi, step);
Ds = zeros(step, step);

for l = 1:step
    A1 = 2 * besselj(1, k * a * (sin(be(l))));
    A2 = k * a * (sin(be(l)));
    for j = 1:step
        Ds(l, j) = A1 / A2;
    end
end

Min = max(Ds, [], 'all');
%Ds = abs(Ds);
%Ds = (20 * log10(Ds / Min));
x = zeros(step * step, 1);
y = zeros(step * step, 1);
z = zeros(step * step, 1);
for l = 1:step
    for j = 1:step
        x((l-1)*step +  j) = Ds(l, j)*sin(be(l))*cos(al(j));
        y((l-1)*step +  j) = Ds(l, j)*sin(be(l))*sin(al(j));
        z((l-1)*step +  j) = Ds(l, j)*cos(be(l));
    end
end

figure
scatter3(x, y, z, '.');


d = lambda / 2;
d = 0.01
Da = zeros(step, step);
aimal = 1 / 3 * pi;
aimbe = 1 / 3 * pi;
N = 7;
M = N;
dx = d;
dy = d;
exptmp = zeros(M, N);
exptmp2 = zeros(M, N);
expall = zeros(step, step);
bx = -k*dx*sin(aimbe)*cos(aimal);
by = -k*dy*sin(aimbe)*sin(aimal);
for l = 1:step
    for j = 1:step
        deltam = k*dx*sin(be(l))*cos(al(j));
        deltan = k*dy*sin(be(l))*sin(al(j));
        for m = 0:M-1
            for n = 0:N-1
                exptmp(m+1, n+1) = exp(1i*(m*(deltam+bx)+ n*(deltan+by)));
                Da(l, j) = Da(l, j) + exptmp(m+1, n+1);
                %exptmp(m+1, n+1) =abs(exptmp(m+1, n+1));
            end
        end
        Max = (max(exptmp, [], 'all'));
        expall(l, j) = Max;
    end
end

Da = Ds .* Da;
%c = 1480だとDs指向性はほぼ球。掛けてもそう変化なし。

Max = max(Da, [], 'all');
for l = 1:step
    for j = 1:step
        Da(l, j) = abs(Da(l, j) / Max);
    end
end


x = zeros(step * step, 1);
y = zeros(step * step, 1);
z = zeros(step * step, 1);
for l = 1:step
    for j = 1:step
        x((l-1)*step +  j) = Da(l, j)*sin(be(l))*cos(al(j));
        y((l-1)*step +  j) = Da(l, j)*sin(be(l))*sin(al(j));
        z((l-1)*step +  j) = Da(l, j)*cos(be(l));
    end
end

figure
scatter3(x, y, z, '.');
